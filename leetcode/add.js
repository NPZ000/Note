// 写一个函数，求两个整数之和，要求在函数体内不得使用 “+”、“-”、“*”、“/” 四则运算符号。
// 位运算解法
// 先求无进位的和 再求进位上的和

// a   b   无进位 进位
// 0   0   0     0
// 0   1   1     0
// 1   0   1     0
// 1   1   0     1
// 观察得出无进位的和是异或的结果 进位上的和是与的结果 要左移一位
// 20      0 0 0 1 0 1 0 0
// 17      0 0 0 1 0 0 0 1
// 无进位   0 0 0 0 0 1 0 1
// 进位     0 0 1 0 0 0 0 0
// 结果     0 0 1 0 0 1 0 1

// 求出无进位和进位上的结果后 可以把他俩当作原来的两个数重复进行上述计算 直至第二个数为0,也就是进位的结果，返回第一个数（无进位）就是最终的结果

function add(a, b) {
    while (b !== 0) {
        // 进位上的和
        const c = (a & b) << 1
        // 无进位上的和赋值给 a
        a ^= b
        // 进位上的和赋值给 b
        b = c
    }
    return a
}

function IAdd(a, b) {
    while(b) {
        const c = (a & b) << 1
        a ^= b
        b = c
    }
    return a
}
console.log(IAdd(1,-2))